[{"content":"关于新版Windows Terminal 简介 Windows 终端是一个面向命令行工具和 shell（如命令提示符、PowerShell 和适用于 Linux 的 Windows 子系统 (WSL)）用户的新式终端应用程序。 它的主要功能包括多个选项卡、窗格、Unicode 和 UTF-8 字符支持、GPU 加速文本呈现引擎，还可以用于创建你自己的主题并自定义文本、颜色、背景和快捷键绑定。 下载与安装 下载途径有两种： 需要系统版本190X及以上 可在微软商店内搜索下载 亦可在GitHub发布页下载 需要注意：git处有两种版本 第一个为预览版 ，第二个为稳定版，请自行选择下载 安装界面如图(因为我这里已经安装了所以显示为启动，正常应为安装): 美化准备工作 PowerShell7 良好的网络环境 PowerShell7安装 在PowerShell处选择对应系统下载 其中LTS为长期更新版本, stable 稳定版本，preview预览版本\n将Terminal添加到右键菜单 这里有两种方式修改:\n通过修改注册表(不推荐) 使用git上的一键脚本配置 这里着重说明一下第二种方式(下列操作默认管理员身份运行) 点击一键脚本跳转页面 注意需要PowerShell版本为7 可下载install.sp1文件然后在PowerShell7中找到文件执行命令 .\\install.ps1 亦可采用git页面给出的命令安装\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://raw.githubusercontent.com/lextm/windowsterminal-shell/master/install.ps1\u0026#39;)) 注意：可能会报下列错误\n.\\install.ps1: File C:\\Users\\lenovo\\Desktop\\install.ps1 cannot be loaded because running scripts is disabled on this system. For more information, see about_Execution_Policies at https://go.microsoft.com/fwlink/?LinkID=135170.\n这是因为PowerShell默认执行权限的问题,此时只需打开PowerShell输入下列命令即可:\nset-ExecutionPolicy RemoteSigned Windows Terminal配置文件更改 打开Windows Terminal，点击标题栏小三角，打开设置页面 目前官方仍未更新GUI页面，所以打开为一个JSON文件 将PowerShell7添加至Windows Terminal启动菜单 在配置文件中修改以下属性 属性名称:list 在其中添加:\n{ \u0026#34;guid\u0026#34;: \u0026#34;{574e775e-4f2a-5b96-ac1e-a2962a402336}\u0026#34;, //程序对应的guid属性唯一值 \u0026#34;hidden\u0026#34;: false, //是否在启动列表隐藏 \u0026#34;name\u0026#34;: \u0026#34;pwsh7\u0026#34;, //启动列表名称 \u0026#34;tabTitle\u0026#34;: \u0026#34;pwsh7\u0026#34;, //选项卡标题名称 \u0026#34;source\u0026#34;: \u0026#34;Windows.Terminal.PowershellCore\u0026#34;, //这会存储源自配置文件的配置文件生成器的名称 \u0026#34;startingDirectory\u0026#34;: \u0026#34;.\u0026#34;, //加载 shell 时所处的起始目录 这一步一定要设为\u0026#39;.\u0026#39;，否则会影响后续操作 \u0026#34;historySize\u0026#34;: 9001, //历史记录大小 \u0026#34;commandline\u0026#34;: \u0026#34;C:/Program Files/PowerShell/7/pwsh.exe -nologo\u0026#34;, //配置文件中使用的可执行文件 \u0026#34;snapOnInput\u0026#34;: true //键入时滚动到输入行 } 其中guid生成可以点击此处\n修改默认启动shell 此时我们修改默认的启动shell为新安装的PowerShell7\n属性名称: defaultProfile 属性值: 对应shell的guid属性\n将此值改为我们上方设置的PowerShell7的guid\n修改字体，背景及配色方案等 在profiles 属性下的 defaults属性中添加/修改些默认参数:\n{ \u0026#34;acrylicOpacity\u0026#34;: 0.25, //设置背景模糊度 \u0026#34;useAcrylic\u0026#34;: true, //开启背景毛玻璃效果 \u0026#34;colorScheme\u0026#34;: \u0026#34;Monokai Night\u0026#34;, //设置配色方案，需要搭配后面的配色方案使用 \u0026#34;suppressApplicationTitle\u0026#34;:true, //启动自定义选项卡标题 \u0026#34;fontSize\u0026#34;: 11, //字体大小 \u0026#34;fontFace\u0026#34;: \u0026#34;Fira Code\u0026#34;, //设置字体 } 字体修改： 选择喜欢的字体下载(最好是支持PowerLine的，否则后续会出现字符渲染的问题) 这里以Fira Code字体为例 点击此处开始下载Fira Code 安装好字体后，在defaults属性中添加\u0026quot;fontFace\u0026quot;: \u0026quot;Fira Code\u0026quot;值\n配色方案修改: 下方网址寻找喜欢的配色方案 terminalsplash atomcorp 多种配色方案，此处以第一个网址为例，进入后等待加载完毕 选择喜欢的配色方案，点击code 复制弹出的代码 粘贴至配置文件的schemes属性中 如\n\u0026#34;schemes\u0026#34;: [{ \u0026#34;name\u0026#34;: \u0026#34;Monokai Night\u0026#34;, //配色方案名称 \u0026#34;background\u0026#34;: \u0026#34;#1f1f1f\u0026#34;, \u0026#34;foreground\u0026#34;: \u0026#34;#f8f8f8\u0026#34;, \u0026#34;black\u0026#34;: \u0026#34;#1f1f1f\u0026#34;, \u0026#34;blue\u0026#34;: \u0026#34;#6699df\u0026#34;, \u0026#34;cyan\u0026#34;: \u0026#34;#e69f66\u0026#34;, \u0026#34;green\u0026#34;: \u0026#34;#a6e22e\u0026#34;, \u0026#34;purple\u0026#34;: \u0026#34;#ae81ff\u0026#34;, \u0026#34;red\u0026#34;: \u0026#34;#f92672\u0026#34;, \u0026#34;white\u0026#34;: \u0026#34;#f8f8f2\u0026#34;, \u0026#34;yellow\u0026#34;: \u0026#34;#e6db74\u0026#34;, \u0026#34;brightBlack\u0026#34;: \u0026#34;#75715e\u0026#34;, \u0026#34;brightBlue\u0026#34;: \u0026#34;#66d9ef\u0026#34;, \u0026#34;brightCyan\u0026#34;: \u0026#34;#e69f66\u0026#34;, \u0026#34;brightGreen\u0026#34;: \u0026#34;#a6e22e\u0026#34;, \u0026#34;brightPurple\u0026#34;: \u0026#34;#ae81ff\u0026#34;, \u0026#34;brightRed\u0026#34;: \u0026#34;#f92672\u0026#34;, \u0026#34;brightWhite\u0026#34;: \u0026#34;#f8f8f2\u0026#34;, \u0026#34;brightYellow\u0026#34;: \u0026#34;#e6db74\u0026#34; }] 修改默认配色方案colorScheme属性值为自定义的配色方案名称\n背景修改： 开启背景毛玻璃效果 \u0026#34;acrylicOpacity\u0026#34;: 0.25, //设置背景模糊度 \u0026#34;useAcrylic\u0026#34;: true, //开启毛玻璃效果 设置背景图片 \u0026#34;backgroundImage\u0026#34;:\u0026#34;图片路径\u0026#34;, \u0026#34;backgroundImageStretchMode\u0026#34;:\u0026#34;背景拉伸\u0026#34;, //可选属性: \u0026#34;none\u0026#34;、\u0026#34;fill\u0026#34;、\u0026#34;uniform\u0026#34;、\u0026#34;uniformToFill\u0026#34; \u0026#34;backgroundImageAlignment\u0026#34;:\u0026#34;背景对齐方式\u0026#34;,//可选属性: \u0026#34;center\u0026#34;、\u0026#34;left\u0026#34;、\u0026#34;top\u0026#34;、\u0026#34;right\u0026#34;、\u0026#34;bottom\u0026#34;、 //\u0026#34;topLeft\u0026#34;、\u0026#34;topRight\u0026#34;、\u0026#34;bottomLeft\u0026#34;、\u0026#34;bottomRight\u0026#34; \u0026#34;backgroundImageOpacity\u0026#34;:\u0026#34;背景不透明度\u0026#34;, //0-1 其他属性如滚动条，光标颜色等可参考官方文档链接 PowerShell配置 新版的PowerShell虽然功能更新不少，但默认的操作和界面比较不耐看，此时我们便需要借助一些插件来完善他\nPowerShell插件配置 使用管理员身份打开PowerShell 依次输入下方三个命令安装插件\nInstall-Module -Name PSReadLine -AllowPrerelease -Force Install-Module posh-git -Scope CurrentUser Install-Module oh-my-posh -Scope CurrentUser 然后输入以下命令来配置插件\nnotepad.exe $PROFILE 这会打开默认PowerShell 的启动配置文件，如果提示没有该文件，点击创建就好 在打开的文件中输入\n# 引入 posh-git Import-Module posh-git # 引入 oh-my-posh Import-Module oh-my-posh #引入 PSReadLine Import-Module PSReadLine # 设置 PowerShell 主题 Set-Theme Paradox #设置 Tab 键补全 Set-PSReadlineKeyHandler -Key Tab -Function MenuComplete # 设置 Ctrl+d 为退出 PowerShell Set-PSReadlineKeyHandler -Key \u0026#34;Ctrl+d\u0026#34; -Function ViExit # 设置 Ctrl+z 为撤销 Set-PSReadLineKeyHandler -Key \u0026#34;Ctrl+z\u0026#34; -Function Undo # 设置向上键为后向搜索历史记录 Set-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward # 设置向下键为前向搜索历史纪录 Set-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward 亦可参考官方样例来自行修改\n使PowerShell支持git bash 此时修改的已经差不多了，但PowerShell的git功能仍有一些缺陷 我们需要修改环境变量，使PowerShell更上一层楼 将git Bash目录下的usr/bin路径复制进去就好了\n后记 这是我的第一篇文章，自微软Bulid 2019以来，宣布新的终端Windows Terminal，我就一直在关注，并第一时间下下来使用，那时的Windows Terminal充满bug，动不动就会闪退，蛋疼的操作，蛋疼的配置，让我着实没能香起来，最近Bulid 2020大会，微软正式推出Windows Terminal 1.0正式版，迫不及待下载后，一个字，香，两个字，真香，虽然还有一些小瑕疵，譬如图形化配置界面，还整json文件呢，真就人均极客了嗷。并没有使用过cmder、Xshell等第三方终端，所以以上观点仅代表个人审美。溜了溜了\n顺便这篇文章的生成与发布均使用新版Windows Terminal\n参考文献: 微软官方文档 如何打造好看还好用的 Windows Terminal\u0026mdash;ChrAlpha 5 个 PowerShell 主题，让你的 Windows 终端更好看\u0026mdash;少数派\n","date":"2020-06-09T10:14:58Z","permalink":"http://example.org/post/windows-terminal/test-chinese/","title":"新版Windows Terminal美化配置"}]